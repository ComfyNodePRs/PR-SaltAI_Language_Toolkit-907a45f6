{
    "last_node_id":78,
    "last_link_id":110,
    "nodes":[
        {
            "id":55,
            "type":"Note",
            "pos":[
                612,
                324
            ],
            "size":{
                "0":409.3635559082031,
                "1":136.74034118652344
            },
            "flags":{
                
            },
            "order":0,
            "mode":0,
            "title":"Search the net with Tavily",
            "properties":{
                "text":""
            },
            "widgets_values":[
                "Here we're utilizing the Tavily Research node to obtain our context documents. This node performs basic or advance searches, and can return answers and raw site content. \n\n"
            ],
            "color":"#432",
            "bgcolor":"#653"
        },
        {
            "id":56,
            "type":"Note",
            "pos":[
                1110,
                760
            ],
            "size":{
                "0":402.7608947753906,
                "1":123.4981689453125
            },
            "flags":{
                
            },
            "order":1,
            "mode":0,
            "title":"System Prompt",
            "properties":{
                "text":""
            },
            "widgets_values":[
                "Coaching the LLM with a system prompt is an essential part of setting up your model to provide the best responses. \n\nHere we're directing the model to only output the provide the relevant data, and not to provide any fluff such as things like \"based on the provided context ...\" before actually giving the user any relevant data. \n"
            ],
            "color":"#432",
            "bgcolor":"#653"
        },
        {
            "id":54,
            "type":"Note",
            "pos":[
                140,
                942
            ],
            "size":{
                "0":359.74749755859375,
                "1":165.04530334472656
            },
            "flags":{
                
            },
            "order":2,
            "mode":0,
            "title":"User Input",
            "properties":{
                "text":""
            },
            "widgets_values":[
                "Here we're obtaining input from Salt Workflow Input, a node which can pass data in-workflow, or receive data from the Salt platform, such as from Discord. \n\nBe sure your `input_type` is set to \"STRING\" to pass string data. \n\n**API Currently Unavailable**\nWhen using the API, be sure your input_name reflects the key you're using on the API to input the data to the workflow. "
            ],
            "color":"#432",
            "bgcolor":"#653"
        },
        {
            "id":30,
            "type":"LLMTavilyResearch",
            "pos":[
                611,
                516
            ],
            "size":{
                "0":409.89569091796875,
                "1":358.2423400878906
            },
            "flags":{
                
            },
            "order":9,
            "mode":0,
            "inputs":[
                {
                    "name":"search_query",
                    "type":"STRING",
                    "link":63,
                    "widget":{
                        "name":"search_query"
                    }
                }
            ],
            "outputs":[
                {
                    "name":"Documents",
                    "type":"DOCUMENT",
                    "links":[
                        93
                    ],
                    "shape":3,
                    "slot_index":0
                },
                {
                    "name":"URLs",
                    "type":"LIST",
                    "links":[
                        
                    ],
                    "shape":3,
                    "slot_index":1
                }
            ],
            "properties":{
                "Node name for S&R":"LLMTavilyResearch"
            },
            "widgets_values":[
                "SALTAI_TAVILY_KEY",
                "who did the Steelers drafted in the 2024 nfl draft",
                "advanced",
                4,
                true,
                true,
                "",
                "",
                10
            ]
        },
        {
            "id":71,
            "type":"SaltOutput",
            "pos":[
                2880,
                350
            ],
            "size":[
                311.30859375,
                276.6031799316406
            ],
            "flags":{
                
            },
            "order":16,
            "mode":0,
            "inputs":[
                {
                    "name":"output_data",
                    "type":"*",
                    "link":106
                },
                {
                    "name":"video_audio",
                    "type":"AUDIO",
                    "link":null
                }
            ],
            "properties":{
                "Node name for S&R":"SaltOutput"
            },
            "widgets_values":[
                "json_output",
                "The JSON formatted response",
                "STRING",
                8,
                "DEFAULT"
            ]
        },
        {
            "id":48,
            "type":"SaltInput",
            "pos":[
                137,
                503
            ],
            "size":{
                "0":360.7602844238281,
                "1":389.8109130859375
            },
            "flags":{
                
            },
            "order":3,
            "mode":0,
            "inputs":[
                {
                    "name":"input_image",
                    "type":"IMAGE",
                    "link":null
                },
                {
                    "name":"input_mask",
                    "type":"MASK",
                    "link":null
                }
            ],
            "outputs":[
                {
                    "name":"value",
                    "type":"*",
                    "links":[
                        63,
                        94
                    ],
                    "shape":3,
                    "slot_index":0
                }
            ],
            "properties":{
                "Node name for S&R":"SaltInput"
            },
            "widgets_values":[
                "search_query",
                "",
                "STRING",
                "What is ComfyUI?",
                "",
                false,
                false,
                "image"
            ]
        },
        {
            "id":50,
            "type":"LLMChatMessagesAdv",
            "pos":[
                1110,
                500
            ],
            "size":{
                "0":400,
                "1":200
            },
            "flags":{
                
            },
            "order":10,
            "mode":0,
            "inputs":[
                {
                    "name":"user_prompt",
                    "type":"STRING",
                    "link":94,
                    "widget":{
                        "name":"user_prompt"
                    }
                }
            ],
            "outputs":[
                {
                    "name":"llm_message",
                    "type":"LIST",
                    "links":[
                        66
                    ],
                    "shape":3,
                    "slot_index":0
                }
            ],
            "properties":{
                "Node name for S&R":"LLMChatMessagesAdv"
            },
            "widgets_values":[
                "You are a search engine end-point that provides valid markdown as a response. You do not chat or talk to the users, but simply provide structured data.\n\nRULES THAT MUST BE FOLLOWED AT ALL TIMES:\n\nDO NOT SAY ANYTHING. Only provide the data requested; and elaborate on it as much as possible. At no point in time are you to talk to the user, or reveal you're analyzing \"the provided context\". You are a data end-point. \n\nIf there are related questions and answers, display them.\n\nStructure your data with title, features, summary, and citations. Be sure to provide ALL source website titles and URL to the websites where you obtained the knowledge at the footer titled \"Citation(s)\".",
                "Please summarize this data. "
            ]
        },
        {
            "id":52,
            "type":"LLMQueryEngine",
            "pos":[
                1540,
                380
            ],
            "size":{
                "0":400,
                "1":200
            },
            "flags":{
                
            },
            "order":12,
            "mode":0,
            "inputs":[
                {
                    "name":"llm_model",
                    "type":"LLM_MODEL",
                    "link":109
                },
                {
                    "name":"llm_index",
                    "type":"LLM_INDEX",
                    "link":90
                },
                {
                    "name":"llm_message",
                    "type":"LIST",
                    "link":66
                }
            ],
            "outputs":[
                {
                    "name":"results",
                    "type":"STRING",
                    "links":[
                        103,
                        104
                    ],
                    "shape":3,
                    "slot_index":0
                }
            ],
            "properties":{
                "Node name for S&R":"LLMQueryEngine"
            },
            "widgets_values":[
                ""
            ]
        },
        {
            "id":51,
            "type":"SaltDisplayAny",
            "pos":[
                2870,
                720
            ],
            "size":[
                486.4827527734383,
                253.48898140625033
            ],
            "flags":{
                
            },
            "order":17,
            "mode":0,
            "inputs":[
                {
                    "name":"input_value",
                    "type":"*",
                    "link":107
                }
            ],
            "outputs":[
                {
                    "name":"output",
                    "type":"*",
                    "links":null,
                    "shape":3
                }
            ],
            "properties":{
                "Node name for S&R":"SaltDisplayAny"
            },
            "widgets_values":[
                "\n{\n    \"title\": \"ComfyUI\",\n    \"features\": [\n        \"Node-Based GUI\",\n        \"Customizable Workflows\",\n        \"Interactive Interface\",\n        \"Compatibility\"\n    ],\n    \"benefits\": [\n        \"Allows users to create and modify workflows by chaining different nodes together.\",\n        \"Interactive interface enables users to add, move, and connect nodes easily.\",\n        \"Offers a customizable and modular approach to image generation.\"\n    ],\n    \"summary\": \"ComfyUI is a node-based graphical user interface designed for Stable Diffusion, allowing users to create image generation workflows by connecting various nodes. Each node represents a different function or step in the workflow, such as loading a model, encoding text prompts, and sampling. The interface is interactive, enabling users to add, move, and connect nodes with ease. ComfyUI offers a customizable and modular approach to image generation, making it a powerful tool for users who want to tailor their workflows.\",\n    \"learn_more\": [\n        \"ComfyUI For Stable Diffusion: The Definitive Guide\",\n        \"Beginner's Guide to ComfyUI - Stable Diffusion Art\"\n    ],\n    \"citations\": [\n        \"https://openaijourney.com/comfyui-guide/\",\n        \"https://stable-diffusion-art.com/comfyui/\"\n    ]\n}\n"
            ]
        },
        {
            "id":75,
            "type":"CR Text Replace",
            "pos":[
                2420,
                370
            ],
            "size":[
                400,
                222
            ],
            "flags":{
                
            },
            "order":15,
            "mode":0,
            "inputs":[
                {
                    "name":"text",
                    "type":"STRING",
                    "link":105,
                    "widget":{
                        "name":"text"
                    }
                }
            ],
            "outputs":[
                {
                    "name":"STRING",
                    "type":"*",
                    "links":[
                        106,
                        107
                    ],
                    "shape":3,
                    "slot_index":0
                },
                {
                    "name":"show_help",
                    "type":"STRING",
                    "links":null,
                    "shape":3
                }
            ],
            "properties":{
                "Node name for S&R":"CR Text Replace"
            },
            "widgets_values":[
                "",
                "```json",
                "",
                "```",
                "",
                "",
                ""
            ]
        },
        {
            "id":70,
            "type":"LLMJsonComposer",
            "pos":[
                1980,
                370
            ],
            "size":[
                405.97374378551103,
                348.3973922729492
            ],
            "flags":{
                
            },
            "order":14,
            "mode":0,
            "inputs":[
                {
                    "name":"llm_model",
                    "type":"LLM_MODEL",
                    "link":110
                },
                {
                    "name":"text_input",
                    "type":"STRING",
                    "link":104,
                    "widget":{
                        "name":"text_input"
                    }
                }
            ],
            "outputs":[
                {
                    "name":"json_output",
                    "type":"STRING",
                    "links":[
                        105
                    ],
                    "shape":3,
                    "slot_index":0
                }
            ],
            "properties":{
                "Node name for S&R":"LLMJsonComposer"
            },
            "widgets_values":[
                "",
                "title, features, benefits, summary, learn_more, citations",
                "You are a JSON end-point. You provide valid structured JSON and nothing else.\n\nIf you have an error such as no context, use the Error JSON Schema, otherwise use JSON Schema.\n\nJSON Schema:\n\n{\n    \"title\": title,\n    \"features\": feature (optional),\n    \"benefits\": benefits (optional),\n    \"summary\": summary,\n    \"citations\": citations,\n}\n\nError JSON Schema:\n{\n    \"error\": the_error\n}"
            ]
        },
        {
            "id":57,
            "type":"Note",
            "pos":[
                1540,
                620
            ],
            "size":{
                "0":394.0451354980469,
                "1":127.75015258789062
            },
            "flags":{
                
            },
            "order":4,
            "mode":0,
            "title":"System Prompt",
            "properties":{
                "text":""
            },
            "widgets_values":[
                "Next step is to simply query the data we've obtained with our system prompt, and users question to guide the LLM on data parsing (especially helpful when search results could contain irrelevant matches). "
            ],
            "color":"#432",
            "bgcolor":"#653"
        },
        {
            "id":76,
            "type":"Note",
            "pos":[
                1980,
                240
            ],
            "size":[
                403.408935546875,
                72.86215209960938
            ],
            "flags":{
                
            },
            "order":5,
            "mode":0,
            "title":"JSON Formatting",
            "properties":{
                "text":""
            },
            "widgets_values":[
                "Here we're using the JSON Composer to format our response into JSON. The JSON compose is fairly reliable with the right coaching and classification -- however we intend to provide more elaborate solutions in the future. "
            ],
            "color":"#432",
            "bgcolor":"#653"
        },
        {
            "id":77,
            "type":"Note",
            "pos":[
                2420,
                650
            ],
            "size":{
                "0":403.408935546875,
                "1":72.86215209960938
            },
            "flags":{
                
            },
            "order":6,
            "mode":0,
            "title":"Replace Markdown",
            "properties":{
                "text":""
            },
            "widgets_values":[
                "Sometimes models don't like to listen regarding markdown code blocks, and will insist on using them. In that case, we'll use a CR Text Replace to simply replace these values with nothing. "
            ],
            "color":"#432",
            "bgcolor":"#653"
        },
        {
            "id":65,
            "type":"LLMVectorStoreIndexAdv",
            "pos":[
                1110,
                320
            ],
            "size":{
                "0":397,
                "1":122
            },
            "flags":{
                
            },
            "order":11,
            "mode":0,
            "inputs":[
                {
                    "name":"llm_model",
                    "type":"LLM_MODEL",
                    "link":108
                },
                {
                    "name":"document",
                    "type":"DOCUMENT",
                    "link":93
                },
                {
                    "name":"optional_llm_context",
                    "type":"LLM_CONTEXT",
                    "link":null
                }
            ],
            "outputs":[
                {
                    "name":"llm_index",
                    "type":"LLM_INDEX",
                    "links":[
                        90
                    ],
                    "shape":3,
                    "slot_index":0
                }
            ],
            "properties":{
                "Node name for S&R":"LLMVectorStoreIndexAdv"
            },
            "widgets_values":[
                1024,
                0
            ]
        },
        {
            "id":78,
            "type":"LLMOpenAIModel",
            "pos":[
                166,
                295
            ],
            "size":{
                "0":315,
                "1":150
            },
            "flags":{
                
            },
            "order":7,
            "mode":0,
            "outputs":[
                {
                    "name":"llm_model",
                    "type":"LLM_MODEL",
                    "links":[
                        108,
                        109,
                        110
                    ],
                    "shape":3,
                    "slot_index":0
                },
                {
                    "name":"embed_model_only",
                    "type":"LLM_EMBED_MODEL",
                    "links":null,
                    "shape":3
                }
            ],
            "properties":{
                "Node name for S&R":"LLMOpenAIModel"
            },
            "widgets_values":[
                "gpt-4o",
                "SALTAI_OPENAI_KEY",
                "text-embedding-ada-002",
                false
            ]
        },
        {
            "id":53,
            "type":"Note",
            "pos":[
                143,
                178
            ],
            "size":[
                359.8668561859473,
                63.4800194812662
            ],
            "flags":{
                
            },
            "order":8,
            "mode":0,
            "title":"Search Engine JSON Bot",
            "properties":{
                "text":""
            },
            "widgets_values":[
                "This workflow demonstrates creating a Search Engine Bot which performs as a JSON end-point. \n\n"
            ],
            "color":"#432",
            "bgcolor":"#653"
        },
        {
            "id":72,
            "type":"SaltDisplayAny",
            "pos":[
                1983,
                766
            ],
            "size":[
                397.21156465175864,
                315.51595083939753
            ],
            "flags":{
                
            },
            "order":13,
            "mode":0,
            "inputs":[
                {
                    "name":"input_value",
                    "type":"*",
                    "link":103
                }
            ],
            "outputs":[
                {
                    "name":"output",
                    "type":"*",
                    "links":null,
                    "shape":3
                }
            ],
            "properties":{
                "Node name for S&R":"SaltDisplayAny"
            },
            "widgets_values":[
                "# ComfyUI\n\n## Features\n- **Node-Based GUI**: ComfyUI is a graphical user interface that uses nodes to construct workflows for image generation.\n- **Customizable Workflows**: Users can create and modify workflows by chaining different nodes together, such as loading a checkpoint model, entering a prompt, and specifying a sampler.\n- **Interactive Interface**: The interface allows users to add, move, and connect nodes easily. Nodes can be resized, and their properties can be viewed and modified.\n- **Compatibility**: Works with Stable Diffusion models and offers functionalities similar to AUTOMATIC1111 but with a different approach.\n\n## Summary\nComfyUI is a node-based graphical user interface designed for Stable Diffusion, allowing users to create image generation workflows by connecting various nodes. Each node represents a different function or step in the workflow, such as loading a model, encoding text prompts, and sampling. The interface is interactive, enabling users to add, move, and connect nodes with ease. ComfyUI offers a customizable and modular approach to image generation, making it a powerful tool for users who want to tailor their workflows.\n\n## Citation(s)\n- [ComfyUI For Stable Diffusion: The Definitive Guide](https://openaijourney.com/comfyui-guide/)\n- [Beginner's Guide to ComfyUI - Stable Diffusion Art](https://stable-diffusion-art.com/comfyui/)"
            ]
        }
    ],
    "links":[
        [
            63,
            48,
            0,
            30,
            0,
            "STRING"
        ],
        [
            66,
            50,
            0,
            52,
            2,
            "LIST"
        ],
        [
            90,
            65,
            0,
            52,
            1,
            "LLM_INDEX"
        ],
        [
            93,
            30,
            0,
            65,
            1,
            "DOCUMENT"
        ],
        [
            94,
            48,
            0,
            50,
            0,
            "STRING"
        ],
        [
            103,
            52,
            0,
            72,
            0,
            "*"
        ],
        [
            104,
            52,
            0,
            70,
            1,
            "STRING"
        ],
        [
            105,
            70,
            0,
            75,
            0,
            "STRING"
        ],
        [
            106,
            75,
            0,
            71,
            0,
            "*"
        ],
        [
            107,
            75,
            0,
            51,
            0,
            "*"
        ],
        [
            108,
            78,
            0,
            65,
            0,
            "LLM_MODEL"
        ],
        [
            109,
            78,
            0,
            52,
            0,
            "LLM_MODEL"
        ],
        [
            110,
            78,
            0,
            70,
            0,
            "LLM_MODEL"
        ]
    ],
    "groups":[
        
    ],
    "config":{
        
    },
    "extra":{
        
    },
    "version":0.4,
    "viewport":{
        "x":726.6989135742188,
        "y":734.71533203125,
        "scale":0.5644739300537773
    }
}